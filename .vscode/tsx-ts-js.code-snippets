{
	// Place your react-template workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Generate react function component": {
		"prefix": "refunc",
		"body": [
			"import React, { useState, FunctionComponent } from 'react';",
			"",
			"// Components",
			"",
			"// Interfaces",
			"",
			"// Stylesheet",
			"import './${1:ComponentName}.scss'",
			"",
			"export interface ${1:ComponentName}Props {",
			"",
			"}",
			"",
			"const ${1:ComponentName}: FunctionComponent<${1:ComponentName}Props> = (props) => {",
			"",
			"    return (",
			"        <div>${1:ComponentName} works!</div>",
			"    );",
			"};",
			"",
			"export default ${1:ComponentName};"
		],
		"description": "Create a react function component from template"
	}
}